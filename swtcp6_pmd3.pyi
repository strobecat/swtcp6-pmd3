class SendError(Exception): ...
class RecvError(Exception): ...
class InvalidAddressError(Exception): ...
class ConnectError(Exception): ...

class TcpState:
    CLOSED: "TcpState"
    LISTEN: "TcpState"
    SYN_SENT: "TcpState"
    SYN_RECEIVED: "TcpState"
    ESTABLISHED: "TcpState"
    FIN_WAIT_1: "TcpState"
    FIN_WAIT_2: "TcpState"
    CLOSE_WAIT: "TcpState"
    CLOSING: "TcpState"
    LAST_ACK: "TcpState"
    TIME_WAIT: "TcpState"

    def __int__(self) -> int: ...

class VirtualNIC:
    @property
    def mtu(self) -> int: ...
    def __new__(cls, mtu: int) -> "VirtualNIC": ...
    def extend_rx_buffer(self, data: bytes) -> None: ...
    def can_consume_tx_buffer(self) -> bool: ...
    def consume_tx_buffer(self) -> bytes: ...

class Interface:
    def __new__(cls, device: VirtualNIC, ip: str, netmask: str) -> "Interface": ...
    @property
    def device(self) -> VirtualNIC: ...
    def poll(self) -> None: ...
    def poll_delay(self) -> "int | None": ...
    def connect(self, ip: str, port: int) -> TcpSocket: ...

class TcpSocket:
    def can_send(self) -> bool: ...
    def may_send(self) -> bool: ...
    def can_recv(self) -> bool: ...
    def may_recv(self) -> bool: ...
    def state(self) -> TcpState: ...
    def send_buf_available(self) -> int: ...
    def send(self, data: bytes) -> int: ...
    def recv(self) -> bytes: ...
    def close(self) -> None: ...
    def abort(self) -> None: ...
